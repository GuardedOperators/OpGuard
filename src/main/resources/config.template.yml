#@ [config.yml template file] 
#@
#@ Schema:
#@ - @(<previous config.yml path> | <previous config.yml path> | ... | <default value>)
#@
#@ About:
#@ - Every '@()' statement will be replaced with the previous configuration file's value.
#@ - Multiple options may be defined within each '@()' statement, where the last option is the default value.
#@ - A <yml path>[] will create a list with values from the previous config.yml.
#@ - All '#@' comments will be ignored in the newly-created config.yml file.

# ------------------------------------------------------- #
#                         OpGuard                         #
# ------------------------------------------------------- #
#      If you find any bugs, please report them here:     # 
#        https://github.com/RezzedUp/OpGuard/issues       #
# ------------------------------------------------------- #

# --------------------- #
# OpGuard Configuration #
# --------------------- #

# If true, OpGuard will lock its commands: preventing new operators from
# being added, and preventing its password from being modified.
# The only way to unlock is to change this value to false and restart the server.
# Default: false
lock: @(lock | false)

# If true, OpGuard will only op players if they're online.
#   - /opguard op <player>
# Default: true
only-op-if-online: @(only-op-if-online | true)

# If true, OpGuard will only deop players if they're online.
#   - /opguard deop <player>
# This option is false by default to avoid circumstances where you're unable
# to deop rogue operators. That way banned operators, for example, can be deop'd.
# Default: false
only-deop-if-online: @(only-deop-if-online | false)

# If true, the following commands will be accessible in-game:
#   - /opguard password <new password>
#   - /opguard reset <current password>
# If false, only console may manage the password (access the commands above).
# Default: true
manage-password-in-game: @(manage.password-in-game | manage-password-in-game | true)

# If true, OpGuard will shut the server down if it is disabled.
# Enable this option if you don't want other plugins to disable OpGuard.
# Default: false
shutdown-on-disable: @(shutdown-on-disable | false)

# If PlugMan is installed and the config option below is true, 
# OpGuard will automatically exempt itself from PlugMan's commands.
# This option may be ignored if you don't have PlugMan installed.
# Default: true
exempt-opguard-from-plugman: @(exempt-opguard-from-plugman | true)

# ------------------- #
# OpGuard Inspections #
# ------------------- #

# Duration of time (in ticks) that OpGuard should verify the op list.
# Remember: 20 ticks = 1 second, so 4 ticks = 1/5 of a second.
# This value cannot be negative or zero.
# Default: 4
inspection-interval: @(inspection-interval | 4)

# If true, OpGuard will check for players with the '*' permission node (all permissions).
# If a player has '*' and isn't a verified operator, OpGuard will punish them.
# Default: true
check-permissions: @(check-permissions | true)

# If true, OpGuard will inject player commands with a special player object
# that will detect and prevent player.setOp(). This may interfere with some commands,
# so instead of modifying this value, try exempting them below. (in the Exemptions section)
# Default: true
inject-player-commands: @(inject-player-commands | true)

# If true, OpGuard will inject certain player events with a special player object
# that will detect and prevent player.setOp().
# Default: true
inject-player-events: @(inject-player-events | true)

# If true, OpGuard will disable plugins that have been caught setting op.
# Default: true
disable-malicious-plugins-when-caught: @(disable-malicious-plugins-when-caught | true)

# If true, OpGuard will rename plugin .jar files that have been caught 
# setting op so they cannot re-enable.
# This will only occur if the option above is also enabled (plugin disabling).
# Default: true
rename-malicious-plugins-when-caught: @(rename-malicious-plugins-when-caught | true)

# -------------- #
#   Exemptions   #
# -------------- #

# ----- TOGGLE: PLUGIN EXEMPTIONS -----
# | 
enable-exempt-plugins: @(enable-exempt-plugins | true)

# | A list of plugins exempt from OpGuard's various checks.
# | When a plugin is present in the list, OpGuard will:
# |   - automatically exempt all of the plugin's commands.
# |   - allow exempt plugins to set and remove op.
exempt-plugins:
- @(exempt-plugins[] | PerWorldPlugins)

# ----- TOGGLE: COMMAND EXEMPTIONS -----
# | OpGuard will not interfere with commands in the exempt-commands list if this option is true.
# | Default: false
enable-exempt-commands: @(enable-exempt-commands | false)

# | A list of commands that OpGuard will not interfere with.
# | The toggle above must be true for these commands to be exempted.
# | Add a command here if OpGuard is causing errors with it.
# Note:
#   Do not include the leading slash.
#   - examplecommand is valid
#   - /examplecommand is not valid
# Don't forget to enable the toggle directly above (enable-exempt-commands: true)
exempt-commands:
- @(exempt-commands[] | examplecommand)

# ----------- #
#   LOGGING   #
# ----------- #

# If false, all OpGuard logging will be disabled.
# Default: true
enable-logging: @(log.enabled | enable-logging | true)

# Log when a plugin attempts to give op.
# Default: true
log-plugin-attempts: @(log.plugin-attempt | log-plugin-attempts | true)

# Log when the console attempts to give op.
# Default: true
log-console-attempts: @(log.console-attempt | log-console-attempts | true)

# Log when a player attempts to use /op.
# Default: true
log-player-attempts: @(log.player-attempt | log-player-attempts | true)

# ------------------------- #
#   MESSAGES AND WARNINGS   #
# ------------------------- #

# Prefix for warnings.
# Default: '&cOpGuard (&4&lWarning&c)&7:'
warn-prefix: @(warn-prefix | '&cOpGuard (&4&lWarning&c)&7:')

# Color to use in warnings for emphasis
# Default: '&c'
warn-emphasis-color: @(warn-emphasis-color | '&c')

# If true, OpGuard will display warnings whenever a plugin attempts to give op.
# Default: true
warn-plugin-attempts: @(warn.plugin-attempt | warn-plugin-attempts | true)

# If true, OpGuard will display warnings whenever console attempts  to use /op.
# Default: true
warn-console-op-attempts: @(warn.console-attempt | warn-console-op-attempts | true)

# If true, OpGuard will display warnings whenever console incorrectly uses /opguard.
# Default: true
warn-console-opguard-attempts: @(warn.console-attempt | warn-console-opguard-attempts | true)

# If true, OpGuard will display warnings whenever a player attempts to use /op.
# Default: true
warn-player-op-attempts: @(warn.player-attempt | warn-player-op-attempts | true)

# If true, OpGuard will display warnings whenever a player incorrectly uses /opguard.
# Default: true
warn-player-opguard-attempts: @(warn.player-attempt | warn-player-opguard-attempts | true)

# Prefix for security warnings.
# Default: '&eOpGuard (&6&lSecurity&e)&7:'
security-prefix: @(security-prefix | '&eOpGuard (&6&lSecurity&e)&7:')

# If true, OpGuard will display warnings when it lacks a password.
# Default: true
enable-security-warnings: @(warn.security-risk | enable-security-warnings | true)

# Prefix for general status messages.
# Default: '&aOpGuard (&2&lOkay&a)&7:'
okay-prefix: @(okay-prefix | '&aOpGuard (&2&lOkay&a)&7:')

# --------------- #
#   PUNISHMENTS   #
# --------------- #

# If true, OpGuard will punish players that other plugins attempt to op.
# Default: true
punish-plugin-attempts: @(punish.plugin-attempt | punish-plugin-attempts | true)

# If true, OpGuard will punish players when the console attempts to use /op.
# Default: true
punish-console-op-attempts: @(punish.console-attempt | punish-console-op-attempts | true)

# If true, OpGuard will punish players when console incorrectly uses /opguard.
# Default: false
punish-console-opguard-attempts: @(punish-console-opguard-attempts | false)
  
# A list of commands to run when punishing a player.
# Default:
# - ban %player% Attempting to gain op
punishment-commands:
- @(punish.command | punishment-commands[] | ban %player% Attempting to gain op)

# ----------- #
#   METRICS   #
# ----------- #

metrics: @(metrics | true)

# Do not modify this value, it may affect config updates in the future.
version: ${version}
